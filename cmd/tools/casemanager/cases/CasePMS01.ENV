[COMMON]
case_name=CasePMS01
token_network_address=new
debug = false

[TOKEN]
T0=new

[NODE]
N0=0x3DE45fEbBD988b6E417E4Ebd2C69E42630FeFBF0,127.0.0.1:6000
N1=0x97251dDfE70ea44be0E5156C4E3AaDD30328C6a5,127.0.0.1:6001
N2=0x2b0C1545DBBEC6BFe7B26c699b74EB3513e52724,127.0.0.1:6002
N3=0xaaAA7F676a677c0B3C8E4Bb14aEC7Be61365acfE,127.0.0.1:6003

[CHANNEL]
C12=N1,N2,T0,100,100,900
C23=N2,N3,T0,10,100,800

[DESCRIPTION]
# 验证增量委托punish是否成功 N1-N2-N3
# 场景：节点1(节点1设置崩溃条件为EventSendAnnouncedDisposedResponseBefore)通过节点2向节点3发送转账11token，第一次转账失败后，节点1向PMS提交punish数据；
# 第二次节点1向节点3继续进行转账3次1个token，转账成功。
# 第三次(节点1设置崩溃条件为EventSendAnnouncedDisposedResponseBefore)转账11token失败，节点1向PMS提交增量punish数据，验证PMS中保存两份 punish数据。
# 后续，如果节点1下线，节点2关闭通道，使用最后一把锁解锁，验证增量委托成功实施惩罚（节点2在通道N1-N2上的余额被罚没，入N1的账户）。
